# 字符串可以使用单引号或双引号，相同的引号之间不能嵌套，单引号和双引号不能跨行使用
# 长字符串可以使用 \ 使多行的语句显示在一行
# 长字符串使用 ''' 或 """ 来表示，三重引号可以换行，并且会保留字符串中的格式
# 可以使用 \ 作为转义字符，通过转义字符，可以在字符串中使用一些特殊的内容
#      \'  表示  '
#      \"  表示  "
#      \t  表示  制表符
#      \n  表示  换行符
#      \\  表示  \
#      \uxxxx  表示  Unicode编码




# 字符串拼接：用 + 
a = 'a=' + 'hello'
print(a)
# 屏幕输出 a=hello
  
# 格式化字符串
a = 123
# 第一种方式：
print('a = ',a)
# 这种方式逗号分隔的字符串中间会自动加空格！！
# 第二种方式：
print('a = %s'%a)
# 第三种方式：格式化字符串，可以通过在字符串前添加一个f来创建一个格式化字符串
a = 乌龟骑士
b = 圆桌骑士
c=f'hello {a} {b}'
print(c)
# 屏幕会输出 hello 乌龟骑士 圆桌骑士


  
  
# 占位符的使用：
#   %s 在字符串中表示任意字符
#   %f 浮点数占位符
#   %d 整数占位符
  
b = 'Hello %s'%'Tortoise Knight'
# % 后面是填充占位符的字符串
# 输出 Hello Tortoise Knight
  
b = 'Hello %s 你好 %s'%('Tortoise Knight','乌龟骑士')
# 这种情况下，第一个 %s 被 Tortoise Knight 填充，第二个 %s 被乌龟骑士填充

b = 'Hello%3s'%'ab'
# %3s表示填充的字符串最少是3个字符
# 输出的是 Hello ab，在Hello和ab之间，多了一个字符

b = 'Hello %3.5s'%'abcdefg'
# 会输出 Hello abcde, %3.5s表示输出最少3个字符，最多5个字符
  
b = 'hello %.2f'%123.456
# %.2f表示输出的数保留2位小数（会四舍五入），输出123.46

b = 'hello %d'%123.95
# %d 只会保留整数部分，输出123
  
  
 
# 字符串复制（将字符串和数字相乘，解释器会将字符串重复指定的次数并返回）
a = 'a'
a = a * 2
print(a)
# 会输出aa
